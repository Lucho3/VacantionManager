@model VacantionManager.Models.ViewModels.ProjectDetailsViewModel;

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_LayoutLogged.cshtml";
}

<script>
    function openTeams(evt, tabName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(tabName).style.display = "block";
        evt.currentTarget.className += " active";
    }
</script>

<style>

    /* Style the tab */
    .tab {
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
    }

        /* Style the buttons inside the tab */
        .tab button {
            background-color: inherit;
            float: left;
            border: none;
            outline: none;
            cursor: pointer;
            padding: 14px 16px;
            transition: 0.3s;
            font-size: 17px;
        }

            /* Change background color of buttons on hover */
            .tab button:hover {
                background-color: #ddd;
            }

            /* Create an active/current tablink class */
            .tab button.active {
                background-color: #ccc;
            }

    /* Style the tab content */
    .tabcontent {
        display: none;
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-top: none;
    }
</style>


<h1>Details</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            Project name:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.project.name)
        </dd>
        <dt class="col-sm-2">
            Project description:
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.project.description)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.project.id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>

<p>@ViewData["Message"]</p>
<div class="tab">
    <button class="tablinks" onclick="openTeams(event, 'TeamsInProject')">Teams in this project</button>
    <button class="tablinks" onclick="openTeams(event, 'AddTeamToProject')">Add team to project</button>
</div>

<div id="TeamsInProject" class="tabcontent">
    @if (Model.project.workingTeams.Count() > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Team name:
                    </th>
                    <th>
                        Team Leader:
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.project.workingTeams)
                {
                <tr>
                    <td>
                        @item.name
                    </td>
                    @if (item.teamLeader != null)
                    {
                        <td>
                            @(item.teamLeader.firstName + " " + item.teamLeader.lastName)

                        </td>
                    }
                    else
                    {
                        <td>
                            No team leader!
                        </td>
                    }
                    <td>
                        <a asp-action="Details" asp-route-id="@item.id" asp-controller="Teams">Details</a> |
                        <a asp-action="RemoveFromProject" asp-route-projectId="@Model.project.id" asp-controller="Projects" asp-route-teamId="@item.id">Remove from project</a>
                    </td>
                </tr>

                }
            </tbody>
        </table>
    }
    else
    {
        <p>No teams in this project!</p>
    }
</div>

<div id="AddTeamToProject" class="tabcontent">
    @if (Model.teams.Count() > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Team name:
                    </th>
                    <th>
                        Team Leader:
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.teams)
                {
                <tr>
                    <td>
                        @item.name
                    </td>

                    @if (item.teamLeader != null)
                    {
                        <td>
                            @(item.teamLeader.firstName + " " + item.teamLeader.lastName)

                        </td>
                    }
                    else
                    {
                       <td>
                                No team leader!

                     </td>
                    }
                    <td>
                        <a asp-action="Details" asp-route-id="@item.id" asp-controller="Teams">Details</a> |
                        <a asp-action="AddTeamToProject" asp-route-projectId="@Model.project.id" asp-route-teamId="@item.id">Add team in project</a>
                    </td>
                </tr>

                    }
                    </tbody>
                </table>
            }
     else
     {
     <p>No free team to add</p>
     }
 </div>
